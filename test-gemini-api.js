// Test Gemini API v·ªõi h√¨nh ·∫£nh
const { GoogleGenerativeAI } = require("@google/generative-ai");
require("dotenv").config();

async function testGeminiWithImage() {
  try {
    console.log("üß™ Testing Gemini API with image...");
    
    // Ki·ªÉm tra API key
    if (!process.env.GEMINI_API_KEY) {
      throw new Error("GEMINI_API_KEY not found in .env file");
    }
    
    console.log("‚úÖ Gemini API Key found");
    console.log("üîë API Key length:", process.env.GEMINI_API_KEY.length);
    
    // Kh·ªüi t·∫°o Gemini
    const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
    const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });
    
    console.log("‚úÖ Gemini model initialized");
    
    // Test 1: Text only
    console.log("\nüìù Test 1: Text only");
    const textResult = await model.generateContent("Xin ch√†o! B·∫°n c√≥ th·ªÉ gi·ªõi thi·ªáu v·ªÅ kh·∫£ nƒÉng ph√¢n t√≠ch h√¨nh ·∫£nh c·ªßa m√¨nh kh√¥ng?");
    console.log("ü§ñ Gemini reply:", textResult.response.text());
    
    // Test 2: Image v·ªõi base64 (·∫£nh 1x1 pixel PNG ƒë∆°n gi·∫£n)
    console.log("\nüñºÔ∏è Test 2: Image analysis with base64");
    
    // T·∫°o m·ªôt ·∫£nh test ƒë∆°n gi·∫£n (1x1 pixel PNG trong su·ªët)
    const testImageBase64 = "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg==";
    
    const imagePrompt = "H√£y m√¥ t·∫£ ·∫£nh n√†y. ƒê√¢y l√† ·∫£nh g√¨?";
    
    const parts = [
      { text: imagePrompt },
      {
        inlineData: {
          mimeType: "image/png",
          data: testImageBase64
        }
      }
    ];
    
    const imageResult = await model.generateContent({ contents: [{ role: "user", parts }] });
    console.log("ü§ñ Gemini image analysis:", imageResult.response.text());
    
    console.log("\n‚úÖ All tests completed successfully!");
    
  } catch (error) {
    console.error("‚ùå Error testing Gemini:", error);
    console.error("Error details:", {
      message: error.message,
      stack: error.stack
    });
  }
}

// Ch·∫°y test
testGeminiWithImage();
