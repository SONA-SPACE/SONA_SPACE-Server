// Test Gemini v·ªõi ·∫£nh th·ª±c t·∫ø t·ª´ attachments
const { GoogleGenerativeAI } = require("@google/generative-ai");
require("dotenv").config();

async function testGeminiWithRealImage() {
  try {
    console.log("üè† Testing Gemini v·ªõi ·∫£nh b·∫£n thi·∫øt k·∫ø nh√†...");
    
    const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
    const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });
    
    // Base64 c·ªßa ·∫£nh b·∫£n thi·∫øt k·∫ø nh√† (r√∫t g·ªçn ƒë·ªÉ test)
    // ƒê√¢y l√† m·ªôt ·∫£nh PNG ƒë∆°n gi·∫£n ƒë·ªÉ test - trong th·ª±c t·∫ø b·∫°n c√≥ th·ªÉ convert ·∫£nh th·∫≠t
    const floorPlanBase64 = "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAAdgAAAHYBTnsmCAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAFYSURBVBiVY/j//z8DJQAggJiQOAAIICZkDgACiAmZA4AAYkLmACCAmJA5AAgBJmQOAAKICZkDgABiQuYAIICYkDkACCAmZA4AAogJmQOAAGJC5gAggJiQOQAIICZkDgACiAmZA4AAYkLmACCAmJA5AAgBJmQOAAKICZkDgABiQuYAIICYkDkACCAmZA4AAogJmQOAAGJC5gAggJiQOQAIICZkDgACiAmZA4AAYkLmACCAmJA5AAgBJmQOAAKICZkDgABiQuYAIICYkDkACCAmZA4AAogJmQOAAGJC5gAggJiQOQAIICZkDgACCAmZA4AAYkLmACCAmJA5AAgBJmQOAAKICZkDgABiQuYAIICYkDkACCAmZA4AAogJmQOAAGJC5gAggJiQOQAIICZkDgACiAmZA4AAYkLmACCAmJA5AAggJmQOAAIIGZkDgABiQuYAIICI4AAggJiQOQAIICAAgABDgAX8SL/+oAAAAASUVORK5CYII=";
    
    const prompt = "H√£y ph√¢n t√≠ch b·∫£n thi·∫øt k·∫ø n√†y v√† m√¥ t·∫£ c√°c ph√≤ng, b·ªë c·ª•c, v√† ƒë∆∞a ra nh·∫≠n x√©t v·ªÅ thi·∫øt k·∫ø kh√¥ng gian.";
    
    const parts = [
      { text: prompt },
      {
        inlineData: {
          mimeType: "image/png",
          data: floorPlanBase64
        }
      }
    ];
    
    console.log("üì§ G·ª≠i ·∫£nh ƒë·∫øn Gemini...");
    const result = await model.generateContent({ 
      contents: [{ role: "user", parts }] 
    });
    
    const reply = result.response.text();
    console.log("ü§ñ Gemini ph√¢n t√≠ch thi·∫øt k·∫ø:");
    console.log("=" * 50);
    console.log(reply);
    console.log("=" * 50);
    
    // Test v·ªõi ·∫£nh kh√°c - m·ªôt ·∫£nh m√†u s·∫Øc ƒë∆°n gi·∫£n
    console.log("\nüé® Test v·ªõi ·∫£nh m√†u ƒë∆°n gi·∫£n...");
    
    // T·∫°o ·∫£nh 3x3 pixel ƒë·ªè
    const redSquareBase64 = "iVBORw0KGgoAAAANSUhEUgAAAAMAAAADCAYAAABWKLW/AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAAdgAAAHYBTnsmCAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAAmSURBVAiZY/zPAAQMYABCgAkZw4AJGcOACRnDgAkZw4AJGcOACRkDAB0AAP//VopcAAAAAElFTkSuQmCC";
    
    const colorResult = await model.generateContent({ 
      contents: [{ 
        role: "user", 
        parts: [
          { text: "·∫¢nh n√†y c√≥ m√†u g√¨? H√£y m√¥ t·∫£ chi ti·∫øt m√†u s·∫Øc." },
          {
            inlineData: {
              mimeType: "image/png",
              data: redSquareBase64
            }
          }
        ]
      }] 
    });
    
    console.log("ü§ñ Gemini ph√¢n t√≠ch m√†u s·∫Øc:");
    console.log(colorResult.response.text());
    
    console.log("\n‚úÖ Test Gemini Vision ho√†n th√†nh!");
    
  } catch (error) {
    console.error("‚ùå L·ªói test Gemini:", error);
    console.error("Chi ti·∫øt l·ªói:", error.message);
  }
}

testGeminiWithRealImage();
