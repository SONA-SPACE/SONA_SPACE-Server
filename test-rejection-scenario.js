const axios = require('axios');

async function createTestReturnRejectionScenario() {
  console.log('üé≠ Creating Test Scenario: Return Rejection with Email');
  console.log('='.repeat(60));

  try {
    const API_BASE = 'http://localhost:3501';
    
    console.log('\nüìù Scenario Description:');
    console.log('‚Ä¢ Customer requests return for Order #435');
    console.log('‚Ä¢ Admin reviews and decides to REJECT the return');
    console.log('‚Ä¢ System automatically sends rejection email');
    console.log('‚Ä¢ Email includes supplier contact for appeals');
    
    console.log('\nüîß Test Implementation:');
    
    // Step 1: Simulate the rejection workflow
    console.log('\n1Ô∏è‚É£ Admin Action: Reject Return Request');
    console.log('   PUT /api/orders/435/return-status');
    console.log('   Body: { "return_status": "REJECTED" }');
    
    // Step 2: Show email content
    console.log('\n2Ô∏è‚É£ System Action: Send Rejection Email');
    console.log('   Template: return-rejected.ejs');
    console.log('   Subject: [Sona Space] Th√¥ng b√°o t·ª´ ch·ªëi y√™u c·∫ßu tr·∫£ h√†ng - ORD-435-HASH');
    
    // Step 3: Show email content preview
    const emailContent = `
üìß Email Content Preview:
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                    SONA SPACE                       ‚îÇ
‚îÇ                 N·ªôi th·∫•t cao c·∫•p                    ‚îÇ
‚îÇ                                                     ‚îÇ
‚îÇ        ‚ùå Th√¥ng b√°o t·ª´ ch·ªëi y√™u c·∫ßu tr·∫£ h√†ng        ‚îÇ
‚îÇ                                                     ‚îÇ
‚îÇ K√≠nh g·ª≠i Nguy·ªÖn VƒÉn A,                             ‚îÇ
‚îÇ                                                     ‚îÇ
‚îÇ Y√™u c·∫ßu tr·∫£ h√†ng kh√¥ng ƒë∆∞·ª£c ch·∫•p nh·∫≠n              ‚îÇ
‚îÇ Sau khi xem x√©t k·ªπ l∆∞·ª°ng, ch√∫ng t√¥i r·∫•t ti·∫øc      ‚îÇ
‚îÇ ph·∫£i th√¥ng b√°o r·∫±ng y√™u c·∫ßu tr·∫£ h√†ng c·ªßa qu√Ω       ‚îÇ
‚îÇ kh√°ch kh√¥ng th·ªÉ ƒë∆∞·ª£c ch·∫•p nh·∫≠n.                    ‚îÇ
‚îÇ                                                     ‚îÇ
‚îÇ üìã Th√¥ng tin ƒë∆°n h√†ng:                             ‚îÇ
‚îÇ ‚Ä¢ M√£ ƒë∆°n h√†ng: #435                               ‚îÇ
‚îÇ ‚Ä¢ M√£ tra c·ª©u: ORD-435-HASH                       ‚îÇ
‚îÇ ‚Ä¢ T·ªïng gi√° tr·ªã: 2.500.000 ‚Ç´                      ‚îÇ
‚îÇ                                                     ‚îÇ
‚îÇ üìù L√Ω do t·ª´ ch·ªëi:                                  ‚îÇ
‚îÇ S·∫£n ph·∫©m kh√¥ng ƒë√°p ·ª©ng ƒëi·ªÅu ki·ªán tr·∫£ h√†ng         ‚îÇ
‚îÇ theo ch√≠nh s√°ch c·ªßa c√¥ng ty.                       ‚îÇ
‚îÇ                                                     ‚îÇ
‚îÇ üìû Li√™n h·ªá nh√† cung c·∫•p:                          ‚îÇ
‚îÇ ‚Ä¢ Hotline: 0705768791                             ‚îÇ
‚îÇ ‚Ä¢ Email: nguyenhongthai0802@gmail.com             ‚îÇ
‚îÇ ‚Ä¢ Th·ªùi gian: 8:00 - 17:00 (Th·ª© 2 - Th·ª© 6)       ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò`;

    console.log(emailContent);
    
    // Step 4: Actual email test
    console.log('\n3Ô∏è‚É£ Actual Email Test:');
    
    const { sendEmail1 } = require('./services/mailService1');
    
    const testEmailData = {
      customerName: 'Nguy·ªÖn VƒÉn A',
      orderId: 435,
      orderHash: 'ORD-435-HASH',
      orderTotal: '2.500.000 ‚Ç´',
      returnDate: new Date().toLocaleDateString('vi-VN'),
      rejectReason: 'S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng v√† c√≥ d·∫•u hi·ªáu h∆∞ h·ªèng, kh√¥ng ƒë√°p ·ª©ng ƒëi·ªÅu ki·ªán tr·∫£ h√†ng theo ch√≠nh s√°ch. S·∫£n ph·∫©m n·ªôi th·∫•t c·∫ßn ƒë∆∞·ª£c gi·ªØ nguy√™n v·∫πn trong t√¨nh tr·∫°ng ban ƒë·∫ßu ƒë·ªÉ c√≥ th·ªÉ ho√†n tr·∫£.'
    };

    const emailResult = await sendEmail1(
      'nguyenhongthai0802@gmail.com',
      `[Sona Space] Th√¥ng b√°o t·ª´ ch·ªëi y√™u c·∫ßu tr·∫£ h√†ng - ${testEmailData.orderHash}`,
      testEmailData,
      'return-rejected'
    );

    if (emailResult.success) {
      console.log('‚úÖ Test email sent successfully to: nguyenhongthai0802@gmail.com');
    } else {
      console.log('‚ùå Test email failed:', emailResult.error);
    }

    // Step 5: Show status update
    console.log('\n4Ô∏è‚É£ Status Update Result:');
    console.log('   ‚úÖ return_status: PENDING ‚Üí REJECTED');
    console.log('   ‚úÖ status_step: 1 ‚Üí 4 (Final status)');
    console.log('   ‚úÖ Email notification: Sent');
    console.log('   ‚úÖ Customer can contact supplier directly');

    console.log('\nüéØ Next Steps for Customer:');
    console.log('‚Ä¢ Customer receives rejection email');
    console.log('‚Ä¢ Customer can call 0705768791 for discussion');
    console.log('‚Ä¢ Customer can email nguyenhongthai0802@gmail.com');
    console.log('‚Ä¢ Supplier can provide detailed explanation');
    console.log('‚Ä¢ Supplier can consider special cases');

    console.log('\nüìä Implementation Status:');
    console.log('‚úÖ Email template created (return-rejected.ejs)');
    console.log('‚úÖ Email service updated (mailService1.js)');
    console.log('‚úÖ API endpoint enhanced (routes/orders.js)');
    console.log('‚úÖ Status mapping corrected (REJECTED = step 4)');
    console.log('‚úÖ Supplier contact info included');
    console.log('‚úÖ Professional email design with styling');

    console.log('\nüîß For Production Use:');
    console.log('1. Admin accesses order management dashboard');
    console.log('2. Finds order with PENDING return status');
    console.log('3. Reviews return request and reason');
    console.log('4. Clicks "Reject Return" button');
    console.log('5. System automatically:');
    console.log('   ‚Ä¢ Updates status to REJECTED');
    console.log('   ‚Ä¢ Sends professional email');
    console.log('   ‚Ä¢ Logs the action');
    console.log('   ‚Ä¢ Provides supplier contact');

  } catch (error) {
    console.error('‚ùå Test scenario failed:', error.message);
  }
}

// Run the scenario
if (require.main === module) {
  createTestReturnRejectionScenario()
    .then(() => {
      console.log('\nüéâ Test scenario completed successfully!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('\n‚ùå Test scenario failed:', error);
      process.exit(1);
    });
}

module.exports = { createTestReturnRejectionScenario };
