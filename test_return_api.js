const axios = require('axios');

async function testReturnStatusUpdate() {
  try {
    console.log('üß™ Testing return status update API...');
    
    // Test case 1: Update to PENDING
    console.log('\n=== TEST 1: Update to PENDING ===');
    const response1 = await axios.put('http://localhost:3501/api/orders/190/return-status', {
      return_status: 'PENDING'
    }, {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer YOUR_ADMIN_TOKEN' // B·∫°n c·∫ßn th√™m token admin th·ª±c t·∫ø
      }
    });
    
    console.log('‚úÖ Response:', response1.data);
    
    // Test case 2: Check current status after update
    console.log('\n=== KI·ªÇM TRA TR·∫†NG TH√ÅI SAU KHI C·∫¨P NH·∫¨T ===');
    const mysql = require('mysql2/promise');
    const connection = await mysql.createConnection({
      host: 'fur.timefortea.io.vn',
      user: 'thainguyen0802',
      password: 'cegatcn!080297',
      database: 'furnitown',
      port: 3306
    });
    
    const [returns] = await connection.query(
      'SELECT status, updated_at FROM order_returns WHERE order_id = 190 ORDER BY updated_at DESC LIMIT 1'
    );
    
    console.log('Tr·∫°ng th√°i hi·ªán t·∫°i:', returns[0]);
    await connection.end();
    
  } catch (error) {
    console.error('‚ùå L·ªói:', error.response?.data || error.message);
    
    if (error.response?.status === 401) {
      console.log('\n‚ö†Ô∏è  L·ªói x√°c th·ª±c! C·∫ßn token admin ƒë·ªÉ test API.');
      console.log('H√£y ki·ªÉm tra middleware auth trong API endpoint.');
    }
  }
}

testReturnStatusUpdate();
