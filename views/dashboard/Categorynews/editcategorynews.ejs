<!-- Tiêu đề -->
<div class="dashboard-header-row">
    <h2 class="dashboard-title">Sửa danh mục tin</h2>
</div>

<!-- Layout -->
<div class="add-room-container">
    <!-- Form -->
    <div class="room-form-column">
        <div class="form-section">
            <h3 class="section-title">Thông tin danh mục tin</h3>

            <div class="form-row">
                <div class="form-group">
                    <label for="roomName">Tên danh muc tin</label>
                    <input type="text" id="newsTitle" class="form-control" placeholder="Nhập tên tin tức" />

                </div>
                <div class="form-group">
                    <label for="roomSlug">Slug</label>
                    <input type="text" id="newsSlug" class="form-control" placeholder="Vd: nhap-slug-cho-danh-muc-tin" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="roomSlug">Mức yêu tiên</label>
                    <input type="text" id="newsPriority" class="form-control" placeholder="Thứ tự ưu tiên (số)" />
                </div>
                <div class="form-group">
                    <label for="roomStatus">Trạng thái</label>
                    <div class="select-wrapper">
                        <select id="newsStatus" class="form-control">
                            <option value="1">Hiển thị</option>
                            <option value="0">Ẩn</option>
                        </select>
                        <i class="fas fa-chevron-down"></i>
                    </div>
                </div>
            </div>
        </div>

        <!-- Nút -->
        <div class="form-actions">
            <button type="button" class="btn btn-cancel">Hủy</button>
            <button type="button" class="btn btn-save">Lưu</button>
        </div>
    </div>

    <!-- Cột phải: Upload ảnh -->
    <div class="image-upload-column">
        <div class="image-upload-container">
            <div class="upload-title">Ảnh đại diện</div>
            <div class="main-upload-area">
                <div class="upload-placeholder3" id="avatarDropArea">
                    <i class="far fa-image"></i>
                    <p>Drop avatar image here, or browse</p>
                    <p class="upload-hint">jpeg, png - kích thước vuông</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JS xử lý -->
<script>
    let avatarFile = null;
    let categoryId = null;
    let oldSlug = null;


    document.addEventListener("DOMContentLoaded", async () => {
        const urlParts = window.location.pathname.split("/");
        categoryId = urlParts[urlParts.length - 1];

        await loadCategoryData(categoryId);
        bindUpload("#avatarDropArea", (file) => (avatarFile = file));

        document.querySelector(".btn-save").addEventListener("click", handleUpdateCategory);
    });

    async function loadCategoryData(id) {
        try {
            const res = await fetch(`http://localhost:3501/api/news-categories/${id}`);
            const data = await res.json();

            if (data) {
                document.getElementById("newsTitle").value = data.name || "";
                document.getElementById("newsSlug").value = data.slug || "";
                document.getElementById("newsPriority").value = data.priority || "";
                document.getElementById("newsStatus").value = data.status;
                oldSlug = data.slug;

                if (data.image) {
                    document.getElementById("avatarDropArea").innerHTML = `<img src="${data.image}" style="width: 100%; border-radius: 6px;" />`;
                    avatarFile = data.image;
                }

                // Gắn lại upload sau khi innerHTML thay đổi
                bindUpload("#avatarDropArea", (file) => (avatarFile = file));
            }
        } catch (err) {
            console.error("Lỗi khi tải danh mục:", err);
            showToast("Không thể tải danh mục", "danger");
        }
    }

    async function handleUpdateCategory() {
        const name = document.getElementById("newsTitle").value.trim();
        const rawSlug = document.getElementById("newsSlug").value.trim();
        let slug;
        const priority = parseInt(document.getElementById("newsPriority").value) || 0;
        const status = parseInt(document.getElementById("newsStatus").value);

        const saveBtn = document.querySelector(".btn-save");
        saveBtn.disabled = true;
        saveBtn.innerText = "Đang lưu...";

        if (rawSlug) {
            slug = rawSlug;
        } else {

            slug = name.normalize("NFD")
                .toLowerCase()
                .normalize("NFD")
                .replace(/[\u0300-\u036f]/g, "")
                .replace(/đ/g, "d")
                .replace(/[^a-z0-9\s-]/g, "")
                .trim()
                .replace(/\s+/g, "-")
                .replace(/\-+/g, "-");
        }

        try {
            let image = null;
            if (avatarFile instanceof File) {
                image = await uploadImage(avatarFile, "SonaSpace/NewsCategories");
            } else if (typeof avatarFile === "string") {
                image = avatarFile;
            }

            const payload = {
                name,
                slug,
                image,
                priority,
                status
            };

            const token = localStorage.getItem("token");

            const res = await fetch(`http://localhost:3501/api/news-categories/${oldSlug}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json",
                    Authorization: `Bearer ${token}`
                },
                body: JSON.stringify(payload)
            });

            const data = await res.json();

            if (data.error) {
                showToast(data.error, "danger");
            } else {
                showToast("Cập nhật danh mục thành công", "success");
                setTimeout(() => window.location.href = "/dashboard/Categorynews", 1000);
            }
        } catch (err) {
            console.error("Lỗi khi cập nhật:", err);
            showToast("Có lỗi khi cập nhật danh mục", "danger");
        }

        saveBtn.disabled = false;
        saveBtn.innerText = "Lưu";
    }

    async function uploadImage(file, folder = "SonaSpace/NewsCategories") {
        if (!file || typeof file === "string") return file;

        const formData = new FormData();
        formData.append("image", file);
        formData.append("folder", folder);

        const res = await fetch("http://localhost:3501/api/upload/newscategorynews", {
            method: "POST",
            body: formData
        });

        const data = await res.json();
        return data.url || null;
    }

    function bindUpload(selector, callback) {
        const dropArea = document.querySelector(selector);
        if (!dropArea) return;

        const newDropArea = dropArea.cloneNode(true);
        dropArea.parentNode.replaceChild(newDropArea, dropArea);

        newDropArea.addEventListener("click", () => {
            const input = document.createElement("input");
            input.type = "file";
            input.accept = "image/*";
            input.onchange = (e) => {
                const file = e.target.files[0];
                if (file) {
                    callback(file);
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        newDropArea.innerHTML = `<img src="${e.target.result}" style="width:100%; border-radius:6px;">`;
                    };
                    reader.readAsDataURL(file);
                }
            };
            input.click();
        });
    }

    function showToast(message, type = "success") {
        let toastContainer = document.getElementById("toastContainer");
        if (!toastContainer) {
            toastContainer = document.createElement("div");
            toastContainer.id = "toastContainer";
            toastContainer.className = "position-fixed top-0 end-0 p-3";
            toastContainer.style.zIndex = "1050";
            document.body.appendChild(toastContainer);
        }

        const toast = document.createElement("div");
        toast.className = `toast align-items-center text-white bg-${type} border-0`;
        toast.setAttribute("role", "alert");
        toast.setAttribute("aria-live", "assertive");
        toast.setAttribute("aria-atomic", "true");

        toast.innerHTML = `
            <div class="d-flex">
                <div class="toast-body">${message}</div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
            </div>
        `;

        toastContainer.appendChild(toast);
        const bsToast = new bootstrap.Toast(toast, { delay: 4000 });
        bsToast.show();

        toast.addEventListener("hidden.bs.toast", () => toast.remove());
    }
</script>