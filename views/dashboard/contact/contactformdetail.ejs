<!-- Tiêu đề -->
<div class="dashboard-header-row">
  <h2 class="dashboard-title">Chi tiết form</h2>
</div>
<!-- Layout -->
<div class="detail-form-container">
  <!-- Form -->
  <div class="form-column">
    <div class="form-section">
      <div class="form-section-header">
        <div class="form-section-header-left">
          <h3 class="section-title">Thông tin thiết kế theo yêu cầu</h3>
          <p class="section-description">
            Ngày tạo: <span id="created_at"></span>
          </p>
          <p class="section-description">
            Ngày cập nhật: <span id="updated_at"></span>
          </p>
          <p class="section-description">
            Trạng thái: <span id="status_text" class="status-text"></span>
          </p>
        </div>
        <div class="form-section-header-right">
          <select name="status" id="status">
            <option value="PENDING">Chờ xử lý</option>
            <option value="IN_PROGRESS">Đang xử lý</option>
            <option value="DEPOSIT">Đã đặt cọc</option>
            <option value="RESOLVED">Đã xử lý</option>
            <option value="REJECTED">Từ chối</option>
          </select>
        </div>
      </div>
      <div class="form-row">
        <div class="form-group">
          <label for="staff_name">Nhân viên</label>
          <select id="staff_name" class="form-control">
            <option value="">Chọn nhân viên</option>
          </select>
        </div>
      </div>

      <div class="form-row">
        <div class="form-group">
          <label for="name">Tên Khách Hàng</label>
          <input type="text" id="name" class="form-control" placeholder="Nhập tên phòng" />
        </div>
        <div class="form-group">
          <label for="email">Email</label>
          <input type="email" id="email" class="form-control" placeholder="ví dụ: phong-khach, phong-ngu" />
        </div>
      </div>

      <div class="form-row">
        <div class="form-group">
          <label for="phone">Số điện thoại</label>
          <input type="text" id="phone" class="form-control" placeholder="Ví dụ: 0909090909" />
        </div>
        <div class="form-group">
          <label for="budget">Ngân sách của khách hàng</label>
          <input type="text" id="budget" class="form-control" placeholder="Chưa bàn giao" />
        </div>
      </div>

      <div class="form-row">
        <div class="form-group">
          <label for="design_fee">Chi phí thiết kế</label>
          <input type="text" id="design_fee" class="form-control" placeholder="Chưa bàn giao" />
        </div>
        <div class="form-group">
          <label for="design_deposits">Chi phí thu trước ( Tự động )</label>
          <input type="text" id="design_deposits" class="form-control" readonly style="pointer-events: none"
            placeholder="Chưa bàn giao" />
        </div>
      </div>

      <div class="form-group">
        <label for="room_name">Không gian thiết kế</label>
        <input type="text" id="room_name" class="form-control" placeholder="Ví dụ: phòng khách, phòng ngủ" />
      </div>

      <div class="form-row">
        <div class="form-group">
          <label for="design_description">Mô tả yêu cầu</label>
          <textarea id="design_description" class="form-control" rows="3"></textarea>
        </div>
      </div>

      <div class="form-row">
        <div class="form-group">
          <label for="drive">Link xem thêm</label>
          <input type="text" id="drive" class="form-control" />
        </div>
      </div>
    </div>
  </div>
  <!-- Cột phải: Sản phẩm trong thiết kế -->
  <div class="design-products-column">
    <div class="form-section">
      <h3 class="section-title">Sản phẩm trong thiết kế</h3>

      <!-- Form thêm sản phẩm -->
      <div class="add-product-form">
        <div class="form-group">
          <label for="variant-select">Chọn sản phẩm</label>
          <select id="variant-select" class="form-control">
            <option value="">Chọn một sản phẩm</option>
          </select>
        </div>
        <div class="form-group">
          <label for="quantity-input">Số lượng</label>
          <input type="number" id="quantity-input" class="form-control" value="1" min="1" />
        </div>
        <div class="form-group">
          <label for="unit-price-input">Đơn giá</label>
          <input type="text" id="unit-price-input" class="form-control" value="0" />
        </div>
        <div class="form-group">
          <label for="first_image">Hình ảnh sản phẩm</label>
          <div class="main-upload-area">
            <div class="upload-placeholder" id="first_image_drop_area">
              <i class="far fa-image"></i>
              <p>Drop image here, or browse</p>
              <p class="upload-hint">jpeg, png - kích thước ngang</p>
            </div>
          </div>
        </div>
        <button type="button" class="btn btn-add" id="add-product-btn">
          Thêm
        </button>
      </div>

      <!-- Bảng sản phẩm -->
      <div class="products-table-container">
        <table class="products-table">
          <thead>
            <tr>
              <th>Ảnh</th>
              <th>Tên</th>
              <th style="white-space: nowrap">Số lượng</th>
              <th style="white-space: nowrap">Đơn giá</th>
              <th style="white-space: nowrap">Thành tiền</th>
              <th></th>
            </tr>
          </thead>
          <tbody id="design-products-tbody">
            <!-- Dữ liệu sẽ được chèn vào đây bằng JS -->
          </tbody>
        </table>
      </div>
      <div class="total-price-container">
        <table class="products-table" style="margin-top: 24px">
          <tbody>
            <tr>
              <td><strong>Tổng giá sản phẩm:</strong></td>
              <td style="text-align: right">
                <span id="total-product-price">0 VNĐ</span>
              </td>
            </tr>
            <tr>
              <td><strong>Chi phí thiết kế:</strong></td>
              <td style="text-align: right">
                <span id="design_fee_text">0 VNĐ</span>
              </td>
            </tr>
            <tr>
              <td><strong>Tổng cộng:</strong></td>
              <td style="text-align: right; font-weight: bold">
                <span id="total-design-price">0 VNĐ</span>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <!-- Row chiếm diện tích bằng container-->
  <div class="design-products-row">
    <div class="form-section">
      <h3 class="section-title">Thông tin chi tiết thiết kế</h3>
      <div class="form-row">
        <div class="form-group">
          <label for="style_design">Phong cách thiết kế</label>
          <textarea id="style_design" class="form-control" rows="3"></textarea>
        </div>
        <div class="form-group">
          <label for="require_design">Mô tả yêu cầu</label>
          <textarea id="require_design" class="form-control" rows="3"></textarea>
        </div>
      </div>
      <div class="form-row">
        <div class="form-group">
          <label for="different_information">Thông tin khác</label>
          <textarea id="different_information" class="form-control" rows="3"></textarea>
        </div>
        <div class="form-group">
          <label for="remarks">Ghi chú</label>
          <textarea id="remarks" class="form-control" rows="3"></textarea>
        </div>
      </div>
    </div>
  </div>
  <!-- Nút -->
    <div class="form-actions">
      <button type="button" class="btn btn-cancel">Hủy</button>
      <button type="button" class="btn btn-save">Lưu</button>
    </div>
</div>

<link href="/tom-select/dist/css/tom-select.bootstrap5.min.css" rel="stylesheet" />
<script src="/tom-select/dist/js/tom-select.complete.min.js"></script>
<script>
  const id = window.location.pathname.split("/").pop();
  let total_product_price = 0;
  let design_fee = 0;
  const designFeeInput = document.getElementById("design_fee");
  const designDepositsInput = document.getElementById("design_deposits");

  function formatDate(dateStr) {
    if (!dateStr) return "-";
    return new Date(dateStr).toLocaleDateString("vi-VN");
  }

  function formatCurrency(value) {
    if (typeof value !== "number" || isNaN(value)) return "0 VNĐ";
    return new Intl.NumberFormat("vi-VN", {
      style: "currency",
      currency: "VND",
    }).format(value);
  }

  function handleDesignFeeInput(e) {
    // Lấy số, bỏ dấu chấm
    let raw = e.target.value.replace(/\./g, "").replace(/[^0-9]/g, "");
    if (!raw) {
      designFeeInput.value = "";
      designDepositsInput.value = "";
      return;
    }
    // Hiển thị lại design_fee theo dạng tiền Việt
    designFeeInput.value = raw.replace(/\B(?=(\d{3})+(?!\d))/g, ".");
    // Tính 30% và hiển thị vào design_deposits
    const deposit = Math.floor(Number(raw) * 0.3);
    designDepositsInput.value = deposit
      .toString()
      .replace(/\B(?=(\d{3})+(?!\d))/g, ".");
  }

  async function loadStaff() {
    const res = await fetch(`/api/users/staff`);
    const data = await res.json();
    if (res.ok) {
      const select = document.getElementById("staff_name");
      select.innerHTML = '<option value="">Chọn nhân viên</option>';
      data.users.forEach((staff) => {
        const option = document.createElement("option");
        option.value = staff.user_id;
        option.textContent = staff.user_name;
        select.appendChild(option);
      });
      // Gán value khi chắc chắn option đã render xong
      select.value = data.staff_name || "";
    } else {
      showToast(data.error || "Có lỗi xảy ra", "danger");
    }
  }

  function loadVariants() {
    fetch(`/api/products/variants`)
      .then((res) => res.json())
      .then((data) => {
        const select = document.getElementById("variant-select");
        select.innerHTML = '<option value="">Chọn một sản phẩm</option>';
        data.forEach((variant) => {
          const option = document.createElement("option");
          option.dataset.image = variant.first_image;
          option.value = variant.variant_id;
          option.textContent = `${variant.product_name} - ${variant.variant_name || variant.slug
            } (${variant.sku || ""})`;
          // Lưu giá vào thuộc tính data
          option.dataset.price = variant.price;
          option.dataset.priceSale = variant.price_sale || "";
          select.appendChild(option);
        });

        // Nếu đã có Tom Select instance, destroy trước khi khởi tạo lại (nếu cần)
        if (select.tomselect) {
          select.tomselect.destroy();
        }
        // Khởi tạo Tom Select
        new TomSelect("#variant-select", {
          create: false,
          sortField: "text",
          // placeholder: "Chọn một sản phẩm",
          allowEmptyOption: true,
        });
      });
  }

  document.addEventListener("DOMContentLoaded", async () => {
    loadData();
    await loadStaff();
    loadVariants();
    loadDesignDetails();

    // handle save
    document.querySelector(".btn-save").addEventListener("click", handleUpdate);

    // handle add product
    document
      .getElementById("add-product-btn")
      .addEventListener("click", handleAddProduct);

    // handle change variant
    document
      .getElementById("variant-select")
      .addEventListener("change", function () {
        const selectedOption = this.options[this.selectedIndex];
        const price =
          selectedOption.dataset.priceSale || selectedOption.dataset.price;
        document.getElementById("unit-price-input").value = price || 0;
        document.getElementById(
          "first_image_drop_area"
        ).innerHTML = `<img src="${selectedOption.dataset.image}" alt="${selectedOption.textContent}" style="height: 30%; width: 30%;">`;
      });

    // Gắn sự kiện vào input design_fee
    designFeeInput.addEventListener("input", handleDesignFeeInput);
  });

  async function loadDesignDetails() {
    const res = await fetch(`/api/contact-form-design/${id}/details`);
    const data = await res.json();
    if (res.ok) {
      const tbody = document.getElementById("design-products-tbody");
      tbody.innerHTML = "";
      total_product_price = 0;
      data.forEach((item) => {
        const row = document.createElement("tr");
        row.dataset.id = item.contact_form_design_detail_id;
        row.innerHTML = `
          <td style="white-space: nowrap; min-width: 100px;">
            <div class="product-image-container">
              <img src="${item.first_image}" alt="${item.product_name
          }" style="width: 80px; height: 35px;">
            </div>
          </td>
          <td style="white-space: nowrap;">${item.product_name}</td>
          <td style="white-space: nowrap;">${item.quantity}</td>
          <td style="white-space: nowrap;">${formatCurrency(
            Number(item.unit_price)
          )}</td>
          <td style="white-space: nowrap;">${formatCurrency(
            Number(item.total_price)
          )}</td>
          <td><button class="btn-remove-product" onclick="handleRemoveProduct(${item.variant_id
          })"><i class="fas fa-trash-alt"></i></button></td>
        `;
        tbody.appendChild(row);
        total_product_price += Number(item.total_price) || 0;
      });
      document.getElementById("total-product-price").textContent =
        total_product_price > 0 ? formatCurrency(total_product_price) : "0 VNĐ";
      updateTotalPrice();
    } else {
      showToast(data.error || "Có lỗi xảy ra", "danger");
    }
  }

  async function handleAddProduct() {
    const variantSelect = document.getElementById("variant-select");
    const variant_id = variantSelect.value;
    const quantity = document.getElementById("quantity-input").value;
    const unit_price = document.getElementById("unit-price-input").value;

    if (!variant_id) {
      showToast("Vui lòng chọn một sản phẩm.", "danger");
      return;
    }

    const selectedOption = variantSelect.options[variantSelect.selectedIndex];

    try {
      const res = await fetch(`/api/contact-form-design/${id}/details`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${localStorage.getItem("token")}`,
        },
        body: JSON.stringify({ variant_id, quantity, unit_price }),
      });

      const data = await res.json();
      if (res.ok) {
        showToast("Thêm sản phẩm thành công", "success");
        loadDesignDetails(); // Tải lại danh sách
      } else {
        showToast(data.error || "Có lỗi xảy ra", "danger");
      }
    } catch (error) {
      showToast("Không thể thêm sản phẩm", "danger");
    }
  }

  async function handleRemoveProduct(detailId) {
    if (!confirm("Bạn có chắc muốn xóa sản phẩm này?")) return;

    try {
      const res = await fetch(
        `/api/contact-form-design/${id}/details/${detailId}`,
        {
          method: "DELETE",
          headers: {
            Authorization: `Bearer ${localStorage.getItem("token")}`,
          },
        }
      );

      const data = await res.json();
      if (res.ok) {
        showToast("Xóa sản phẩm thành công", "success");
        loadDesignDetails(); // Tải lại danh sách
      } else {
        showToast(data.error || "Có lỗi xảy ra", "danger");
      }
    } catch (error) {
      showToast("Không thể xóa sản phẩm", "danger");
    }
  }

  async function loadData() {
    const res = await fetch(`/api/contact-form-design/${id}`);
    const data = await res.json();
    if (res.ok) {
      console.log(data);
      design_fee = data.design_fee || 0;
      document.getElementById("design_fee_text").innerHTML = data.design_fee
        ? formatCurrency(Number(data.design_fee))
        : "0 VNĐ";
      document.getElementById("created_at").innerHTML = formatDate(
        data.created_at
      );
      document.getElementById("updated_at").innerHTML = formatDate(
        data.updated_at
      );
      document.getElementById("name").value = data.name;
      document.getElementById("email").value = data.email;
      document.getElementById("room_name").value = data.room_name;
      document.getElementById("phone").value = data.phone;
      document.getElementById("budget").value = data.budget
        ? Number(data.budget).toLocaleString("vi-VN")
        : "";
      document.getElementById("design_fee").value = data.design_fee
        ? Number(data.design_fee).toLocaleString("vi-VN")
        : "";
      document.getElementById("design_deposits").value = data.design_deposits
        ? Number(data.design_deposits).toLocaleString("vi-VN")
        : "";
      document
        .getElementById("design_deposits")
        .addEventListener("keydown", (e) => e.preventDefault());
      document
        .getElementById("design_deposits")
        .addEventListener("paste", (e) => e.preventDefault());
      document.getElementById("design_description").value =
        data.design_description;
      document.getElementById("require_design").value = data.require_design;
      document.getElementById("style_design").value = data.style_design;
      document.getElementById("different_information").value =
        data.different_information;
      document.getElementById("status").value = data.status;
      if (data.status === "IN_PROGRESS") {
        document.getElementById("design_fee").disabled = false;
        document.getElementById("design_fee").onkeydown = null;
        document.getElementById("design_fee").onpaste = null;
        document.getElementById("design_fee").oninput = null;
      } else {
        document.getElementById("design_fee").disabled = true;
        document.getElementById("design_fee").onkeydown = (e) =>
          e.preventDefault();
        document.getElementById("design_fee").onpaste = (e) =>
          e.preventDefault();
        document.getElementById("design_fee").oninput = (e) =>
          e.preventDefault();
      }
      document.getElementById("status_text").innerHTML =
        data.status.charAt(0).toUpperCase() + data.status.slice(1);
      document
        .getElementById("status_text")
        .classList.add(`status-${data.status.toLowerCase()}`);
      document.getElementById("remarks").value = data.remarks;
      document.getElementById("staff_name").value = data.user_id;
      document.getElementById("drive").value = data.drive;
      updateTotalPrice();
    } else {
      showToast(data.error || "Có lỗi xảy ra", "danger");
    }
  }

  async function handleUpdate() {
    const user_id = document.getElementById("staff_name").value;
    if (user_id === "") {
      showToast(
        "Vui lòng chọn nhân viên thực hiện trước khi chuyển trạng thái",
        "danger"
      );
      return;
    }
    const name = document.getElementById("name").value;
    const email = document.getElementById("email").value;
    const room_name = document.getElementById("room_name").value;
    const phone = document.getElementById("phone").value;
    const budget = Number(
      document
        .getElementById("budget")
        .value.replace(/,/g, "")
        .replace(/\./g, "")
    );
    const design_fee = Number(
      document
        .getElementById("design_fee")
        .value.replace(/,/g, "")
        .replace(/\./g, "")
    );
    const design_deposits = Number(
      document
        .getElementById("design_deposits")
        .value.replace(/,/g, "")
        .replace(/\./g, "")
    );
    const design_description =
      document.getElementById("design_description").value;
    const require_design = document.getElementById("require_design").value;
    const style_design = document.getElementById("style_design").value;
    const different_information = document.getElementById(
      "different_information"
    ).value;
    const remarks = document.getElementById("remarks").value;
    const status = document.getElementById("status").value;
    const unit_price = document.getElementById("unit-price-input").value;
    const drive = document.getElementById("drive").value;
    try {
      const payload = {
        name,
        email,
        room_name,
        phone,
        budget,
        design_fee,
        design_deposits,
        design_description,
        require_design,
        style_design,
        different_information,
        remarks,
        status,
        user_id,
        drive,
      };

      const res = await fetch(`/api/contact-form-design/${id}`, {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${localStorage.getItem("token")}`,
        },
        body: JSON.stringify(payload),
      });

      const data = await res.json();
      if (data.error) {
        showToast(data.error, "danger");
      } else {
        showToast("Cập nhật thành công", "success");
        setTimeout(
          () => (window.location.href = "/dashboard/contact-forms-design"),
          1500
        );
      }
    } finally {
      document.querySelector(".btn-save").disabled = false;
      document.querySelector(".btn-save").innerText = "Lưu";
    }
  }

  // Hàm cập nhật tổng cộng
  function updateTotalPrice() {
    const total =
      (Number(total_product_price) || 0) + (Number(design_fee) || 0);
    document.getElementById("total-design-price").textContent =
      total > 0 ? formatCurrency(total) : "0 VNĐ";
  }

  function showToast(message, type = "success") {
    let toastContainer = document.getElementById("toastContainer");
    if (!toastContainer) {
      toastContainer = document.createElement("div");
      toastContainer.id = "toastContainer";
      toastContainer.className = "position-fixed top-0 end-0 p-3";
      toastContainer.style.zIndex = "1050";
      document.body.appendChild(toastContainer);
    }

    const toast = document.createElement("div");
    toast.className = `toast align-items-center text-white bg-${type} border-0`;
    toast.setAttribute("role", "alert");
    toast.setAttribute("aria-live", "assertive");
    toast.setAttribute("aria-atomic", "true");

    toast.innerHTML = `
          <div class="d-flex">
            <div class="toast-body">${message}</div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
          </div>`;

    toastContainer.appendChild(toast);
    const bsToast = new bootstrap.Toast(toast, { delay: 4000 });
    bsToast.show();
    toast.addEventListener("hidden.bs.toast", () => toast.remove());
  }
</script>