<!-- Tiêu đề và Thanh công cụ -->
<div class="room_page">
  <div class="dashboard-header-row">
    <h2 class="dashboard-title">Không gian</h2>
    <div class="action-buttons">
      <button class="add-room-btn" onclick="window.location.href='/dashboard/addroom'">
        <i class="fas fa-plus"></i> Thêm không gian mới
      </button>
    </div>
  </div>

  <!-- Bộ lọc và Tìm kiếm -->
  <div class="filter-row">
    <div class="search-container">
      <i class="fas fa-search search-icon"></i>
      <input type="text" class="search-input" placeholder="Tìm kiếm không gian..." />
    </div>
    <div class="date-range">
      <i class="far fa-calendar-alt"></i>
      <span>01/04/2023 - 30/04/2023</span>
    </div>
    <div class="results-info">Đang tải dữ liệu...</div>
  </div>

  <!-- Bảng Không gian -->
  <div class="room-table-container">
    <table class="room-table" id="roomsTable">
      <thead>
        <tr>
          <th>Không gian</th>
          <th>Sản phẩm</th>
          <th>Trạng thái</th>
          <th>Ngày tạo</th>
          <th>Ngày cập nhật</th>
          <th>Slug</th>
          <th>Thao tác</th>
        </tr>
      </thead>
      <tbody>
        <!-- Dữ liệu sẽ được JS đổ vào -->
      </tbody>
    </table>
  </div>
</div>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const URL_API = "http://localhost:3501/api";

    function getRooms() {
      fetch(URL_API + "/rooms/admin")
        .then((response) => response.json())
        .then((data) => {
          renderRooms(data);
          console.log("Danh sách không gian:", data);
        })
        .catch((error) => {
          console.error("Lỗi khi tải danh sách không gian:", error);
          document.querySelector(".results-info").textContent =
            "Không thể tải dữ liệu.";
        });
    }

    function renderRooms(rooms) {
      const tableBody = document.querySelector("#roomsTable tbody");
      tableBody.innerHTML = "";

      rooms.forEach((room) => {
        const row = document.createElement("tr");

        // Gán mặc định nếu không có status
        const status = room.status === 1 ? "visible" : "hidden";

        row.innerHTML = `
            <td>
              <div class="room-info">
                <div class="room-image">
                  <img src="${room.room_image || "/images/default.jpg"}" alt="${room.room_name
          }">
                </div>
                <div class="room-name">${room.room_name}</div>
              </div>
            </td>
            <td>${room.product_count || 0}</td>
            <td>
              <span class="status-indicator ${status === "visible" ? "visible" : "hidden"
          }">
                <i class="fas ${status === "visible" ? "fa-eye" : "fa-eye-slash"
          }"></i>
                ${status === "visible" ? "Hiển thị" : "Ẩn"}
              </span>
            </td>
            <td>${formatDate(room.created_at)}</td>
            <td>${formatDate(room.updated_at)}</td>
            <td>${room.slug || "-"}</td>
            <td>
              <div class="action-cell">
                <button class="action-button edit" data-id="${room.slug
          }" onclick="window.location.href='/dashboard/editroom/${room.slug
          }'" title="Chỉnh sửa">
                  <i class="fas fa-edit"></i>
                </button>
                <button class="action-button visibility" data-slug="${room.slug
          }" data-status="${status}" title="${status === "visible" ? "Ẩn không gian" : "Hiển thị không gian"
          }">
                  <i class="fas ${status === "visible" ? "fa-eye-slash" : "fa-eye"
          }"></i>
                </button>
                <button class="action-button delete" data-slug="${room.slug
          }" data-name="${room.room_name}" title="Xóa không gian">
                  <i class="fas fa-trash"></i>
                </button>
              </div>
            </td>
          `;

        tableBody.appendChild(row);
      });

      document.querySelectorAll(".action-button.delete").forEach((btn) => {
        btn.addEventListener("click", () => {
          const roomSlug = btn.getAttribute("data-slug");
          const roomName = btn.getAttribute("data-name");
          deleteRoom(roomSlug, roomName);
        });
      });

      document.querySelectorAll(".action-button.visibility").forEach((btn) => {
        btn.addEventListener("click", () => {
          const roomSlug = btn.getAttribute("data-slug");
          const roomStatus = btn.getAttribute("data-status");
          changeStatus(roomSlug, roomStatus);
        });
      });

      document.querySelector(
        ".results-info"
      ).textContent = `Hiển thị ${rooms.length} kết quả`;
    }

    function changeStatus(roomSlug, roomStatus) {
      const token = localStorage.getItem("token");
      fetch(`${URL_API}/rooms/${roomSlug}`, {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${token}`,
        },
        body: JSON.stringify({ status: roomStatus === "visible" ? 0 : 1 }),
      })
        .then((res) => res.json())
        .then((data) => {
          if (data.error) {
            showToast(data.error, "danger");
          } else {
            showToast("Cập nhật trạng thái thành công", "success");
            setTimeout(() => location.reload(), 1500);
          }
        });
    }

    function deleteRoom(roomSlug, roomName) {
      showConfirm({
        message: `Bạn có chắc chắn muốn xóa không gian "${roomName}"?`,
        confirmText: "Xác nhận",
        cancelText: "Hủy",
        onConfirm: () => {
          fetch(`${URL_API}/rooms/${roomSlug}`, {
            method: "DELETE",
            headers: {
              Authorization: `Bearer ${localStorage.getItem("token")}`,
            },
          })
            .then((res) => res.json())
            .then((data) => {
              if (data.error) {
                showToast(data.error, "danger");
              } else {
                showToast("Xóa không gian thành công", "success");
                setTimeout(() => location.reload(), 1000);
              }
            })
            .catch((err) => {
              console.error("Lỗi khi xóa:", err);
              showToast("Xảy ra lỗi khi xóa không gian", "danger");
            });
        },
      });
    }

    function formatDate(dateStr) {
      if (!dateStr) return "-";
      return new Date(dateStr).toLocaleDateString("vi-VN");
    }

    getRooms();
  });

  function showConfirm({
    message = "Are you sure?",
    confirmText = "Xác nhận",
    cancelText = "Hủy",
    onConfirm = () => { },
    onCancel = () => { },
  } = {}) {
    let confirmPopup = document.getElementById("confirmPopup");
    if (confirmPopup) confirmPopup.remove(); // Remove old popup if exists

    // Create popup container
    confirmPopup = document.createElement("div");
    confirmPopup.id = "confirmPopup";
    confirmPopup.innerHTML = `
    <div class="confirm-dialog">
      <div class="confirm-message">${message}</div>
      <div class="confirm-actions">
        <button class="btn btn-confirm">${confirmText}</button>
        <button class="btn btn-cancel">${cancelText}</button>
      </div>
    </div>
    <div class="confirm-overlay"></div>
  `;

    document.body.appendChild(confirmPopup);

    // Add event listeners
    confirmPopup.querySelector(".btn-confirm").onclick = () => {
      confirmPopup.remove();
      onConfirm();
    };
    confirmPopup.querySelector(".btn-cancel").onclick = () => {
      confirmPopup.remove();
      onCancel();
    };
    // Click overlay to cancel
    confirmPopup.querySelector(".confirm-overlay").onclick = () => {
      confirmPopup.remove();
      onCancel();
    };
  }
</script>