<!-- Tiêu đề -->
<div class="dashboard-header-row">
    <h2 class="dashboard-title">Cập nhật thông tin user</h2>
</div>

<!-- Layout -->
<div class="add-room-container">
    <!-- Form -->
    <div class="room-form-column">
        <div class="form-section">
            <h3 class="section-title">Thông tin người dùng</h3>

            <div class="form-row">
                <div class="form-group">
                    <label for="userName">Tên người dùng</label>
                    <input type="text" id="userName" class="form-control" placeholder="Nhập tên người dùng" />
                </div>
                <div class="form-group">
                    <label for="userPhone">Số điện thoại</label>
                    <input type="text" id="userPhone" class="form-control" placeholder="Nhập số điện thoại" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="userBirth">Ngày sinh</label>
                    <input type="date" id="userBirth" class="form-control" placeholder="Nhập ngày sinh" />
                </div>
                <div class="form-group">
                    <label for="userRole">Quyền</label>
                    <div class="select-wrapper">
                        <select id="userRole" class="form-control">
                            <option value="user">User</option>
                            <option value="admin">Admin</option>
                            <option value="staff">Staff</option>
                        </select>
                        <i class="fas fa-chevron-down"></i>
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="userGender">Giới tính</label>
                    <input type="text" id="userGender" class="form-control" placeholder="Nhập giới tính" />
                </div>
                <div class="form-group">
                    <label for="userStatus">Trạng thái tài khoản</label>
                    <div class="select-wrapper">
                        <select id="userStatus" class="form-control">
                            <option value="1">Hiển thị</option>
                            <option value="0">Ẩn</option>
                        </select>
                        <i class="fas fa-chevron-down"></i>
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="userEmail">Email</label>
                    <input type="text" id="userEmail" class="form-control readonly-field" placeholder="Nhập email"
                        readonly />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="userAddress">Địa chỉ</label>
                    <input type="text" id="userAddress" class="form-control" placeholder="Nhập địa chỉ" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="userPurchased">Sản phẩm đã mua</label>
                    <input type="text" id="userPurchased" class="form-control readonly-field"
                        placeholder="Nhập sản phẩm đã mua" readonly />
                </div>
                <div class="form-group">
                    <label for="userCategory">Loại khách hàng</label>
                    <div class="select-wrapper">
                        <select id="userCategory" class="form-control">
                            <option value="Khách hàng mới">Khách hàng mới</option>
                            <option value="Khách hàng cũ">Khách hàng cũ</option>
                        </select>
                        <i class="fas fa-chevron-down"></i>
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="userVerifiedAt">Ngày xác thực tài khoản</label>
                    <input type="text" id="userVerifiedAt" class="form-control readonly-field"
                        placeholder="Nhập ngày xác thực tài khoản" readonly />
                </div>
                <div class="form-group">
                    <label for="userDisabledAt">Ngày vô hiệu hoá tài khoản</label>
                    <input type="text" id="userDisabledAt" class="form-control readonly-field"
                        placeholder="Nhập ngày vô hiệu hoá tài khoản" readonly />
                </div>
            </div>

        </div>

        <!-- Nút -->
        <div class="form-actions">
            <button type="button" class="btn btn-cancel">Hủy</button>
            <button type="button" class="btn btn-save" id="btnSaveUser">Lưu</button>
        </div>
    </div>

    <!-- Cột phải: Upload ảnh -->
    <div class="image-upload-column">
        <div class="image-upload-container">
            <div class="upload-title">Ảnh đại diện</div>
            <div class="main-upload-area">
                <div class="upload-placeholder" id="avatarDropArea">
                    <input type="file" id="userImageInput" accept="image/*" style="display: none;" />

                    <i class="fas fa-cloud-upload-alt"></i>
                    <p>Kéo thả hoặc click để tải ảnh</p>
                    <p class="upload-hint">Định dạng: JPG, PNG (Tối đa 5MB)</p>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="toastContainer" class="position-fixed top-0 end-0 p-3" style="z-index:1050"></div>


<script>
    let isRemoveImage = false;
    let currentImageUrl = '';
    let selectedImageFile = null;

    document.addEventListener('DOMContentLoaded', async () => {
        const urlParams = new URLSearchParams(window.location.search);
        const userId = urlParams.get('id');
        if (!userId) return;

        try {
            const res = await fetch(`/api/users/admin/${userId}`);
            const user = await res.json();

            currentImageUrl = user.image || '';

            document.getElementById('userName').value = user.full_name || '';
            document.getElementById('userPhone').value = user.phone || '';
            document.getElementById('userBirth').value = user.birth ? new Date(user.birth).toISOString().split('T')[0] : '';
            document.getElementById('userRole').value = user.role || 'user';
            document.getElementById('userGender').value = user.gender || '';
            document.getElementById('userStatus').value = user.email_active ? '1' : '0';
            document.getElementById('userEmail').value = user.email || '';
            document.getElementById('userAddress').value = user.address || '';
            document.getElementById('userPurchased').value = user.purchasedProducts || '0';
            document.getElementById('userCategory').value = user.category || 'Khách hàng mới';
            document.getElementById('userVerifiedAt').value = user.verified_at || '';
            document.getElementById('userDisabledAt').value = user.disabled_at || '';

            if (currentImageUrl) {
                renderImagePreview(currentImageUrl);
            } else {
                renderUploadPrompt();
            }

        } catch (err) {
            console.error('Lỗi khi tải dữ liệu user:', err);
            showToast('Không thể tải dữ liệu người dùng', 'danger');
        }
    });

    document.getElementById('btnSaveUser').addEventListener('click', async () => {
        const userId = new URLSearchParams(window.location.search).get('id');
        if (!userId) return;

        const formData = new FormData();
        formData.append('user_name', document.getElementById('userName').value);
        formData.append('user_number', document.getElementById('userPhone').value);
        formData.append('user_gender', document.getElementById('userGender').value);
        formData.append('user_birth', document.getElementById('userBirth').value);
        formData.append('user_role', document.getElementById('userRole').value);
        formData.append('user_address', document.getElementById('userAddress').value);
        formData.append('user_email_active', document.getElementById('userStatus').value);
        formData.append('user_verified_at', document.getElementById('userVerifiedAt').value);
        formData.append('user_disabled_at', document.getElementById('userDisabledAt').value);
        formData.append('user_category', document.getElementById('userCategory').value);
        formData.append('remove_image', isRemoveImage ? '1' : '0');

        if (selectedImageFile) {
            formData.append('image', selectedImageFile);
        }

        try {
            const response = await fetch(`/api/users/admin/${userId}`, {
                method: 'PUT',
                body: formData,
            });

            const result = await response.json();
            if (response.ok) {
                showToast('Cập nhật thành công!', 'success');
                selectedImageFile = null;
                isRemoveImage = false;
            } else {
                console.error(result);
                showToast(result.error || 'Cập nhật thất bại', 'danger');
            }
        } catch (err) {
            console.error(err);
            showToast('Có lỗi xảy ra khi gửi dữ liệu', 'danger');
        }
    });

    function handleImageChange(e) {
        const file = e.target.files[0];
        if (file) {
            selectedImageFile = file;
            const reader = new FileReader();
            reader.onload = (ev) => {
                renderImagePreview(ev.target.result);
                isRemoveImage = false;
            };
            reader.readAsDataURL(file);
        }
    }

    function renderUploadPrompt() {
        const avatarDropArea = document.getElementById('avatarDropArea');
        avatarDropArea.innerHTML = `
            <i class="fas fa-cloud-upload-alt"></i>
            <p>Kéo thả hoặc click để tải ảnh</p>
            <p class="upload-hint">Định dạng: JPG, PNG (Tối đa 5MB)</p>
            <input type="file" id="userImageInput" accept="image/*" style="display: none;" />
        `;
        document.getElementById('userImageInput').addEventListener('change', handleImageChange);

        avatarDropArea.addEventListener('click', () => {
            const input = document.getElementById('userImageInput');
            if (input) input.click();
        });
    }

    function renderImagePreview(imageSrc) {
        const avatarDropArea = document.getElementById('avatarDropArea');
        avatarDropArea.innerHTML = `
            <div class="avatar-preview">
                <img src="${imageSrc}" alt="avatar" style="max-width: 100%; border-radius: 8px;" />
                <button type="button" id="removeAvatarBtn" class="remove-avatar-btn">×</button>
                <input type="file" id="userImageInput" accept="image/*" style="display: none;" />
            </div>
        `;
        document.getElementById('userImageInput').addEventListener('change', handleImageChange);

        document.getElementById('removeAvatarBtn').addEventListener('click', () => {
            isRemoveImage = true;
            currentImageUrl = '';
            selectedImageFile = null;
            renderUploadPrompt();
        });

        avatarDropArea.addEventListener('click', () => {
            const input = document.getElementById('userImageInput');
            if (input) input.click();
        });
    }

    // Toast
    function showToast(message, type = "success") {
        let toastContainer = document.getElementById("toastContainer");
        if (!toastContainer) {
            toastContainer = document.createElement("div");
            toastContainer.id = "toastContainer";
            toastContainer.className = "position-fixed top-0 end-0 p-3";
            toastContainer.style.zIndex = "1050";
            document.body.appendChild(toastContainer);
        }

        const toast = document.createElement("div");
        toast.className = `toast align-items-center text-white bg-${type} border-0`;
        toast.setAttribute("role", "alert");
        toast.setAttribute("aria-live", "assertive");
        toast.setAttribute("aria-atomic", "true");

        toast.innerHTML = `
            <div class="d-flex">
                <div class="toast-body">${message}</div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
            </div>
        `;

        toastContainer.appendChild(toast);
        const bsToast = new bootstrap.Toast(toast, { delay: 3000 });
        bsToast.show();

        toast.addEventListener("hidden.bs.toast", () => toast.remove());
    }
</script>