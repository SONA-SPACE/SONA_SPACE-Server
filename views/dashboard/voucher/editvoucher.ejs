<!-- Tiêu đề -->
<div class="dashboard-header-row">
    <h2 class="dashboard-title">Sửa Voucher</h2>
</div>

<div class="add-voucher-container">
    <div class="voucher-form-column">
        <div class="form-section-voucher">
            <h3 class="section-title">Thông tin Voucher</h3>

            <div class="form-row">
                <div class="form-group">
                    <label for="vouchertitle">Tiêu đề</label>
                    <input type="text" id="vouchertitle" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="vouchercode">Mã giảm giá</label>
                    <input type="text" id="vouchercode" class="form-control" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="voucherprice">Giá giảm</label>
                    <input type="number" id="voucherprice" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="vouchertype">Kiểu giảm</label>
                    <div class="select-wrapper">
                        <select id="vouchertype" class="form-control">
                            <option value="percentage">Phần trăm</option>
                            <option value="fixed">Cố định</option>
                        </select>
                        <i class="fas fa-chevron-down"></i>
                    </div>
                </div>
                <div class="form-group">
                    <label for="voucherUsed">Lượt sử dụng</label>
                    <input type="number" id="voucherUsed" class="form-control" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="voucherflash">Flash sale</label>
                    <div class="select-wrapper">
                        <select id="voucherflash" class="form-control">
                            <option value="1">Có</option>
                            <option value="0">Không</option>
                        </select>
                        <i class="fas fa-chevron-down"></i>
                    </div>
                </div>
                <div class="form-group">
                    <label for="voucherStatus">Trạng thái</label>
                    <div class="select-wrapper">
                        <select id="voucherStatus" class="form-control">
                            <option value="1">Hiển thị</option>
                            <option value="0">Ẩn</option>
                        </select>
                        <i class="fas fa-chevron-down"></i>
                    </div>
                </div>
                <div class="form-group">
                    <label for="minOrder">Đơn hàng tối thiểu</label>
                    <input type="number" id="minOrder" class="form-control" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="applyToAll">Áp dụng cho:</label>
                    <div class="select-wrapper">
                        <select id="applyToAll" class="form-control">
                            <option value="all">Tất cả người dùng</option>
                            <option value="new_users_30d">Người dùng mới trong 30 ngày</option>
                        </select>
                        <i class="fas fa-chevron-down"></i>
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="voucherStart">Thời gian bắt đầu</label>
                    <input type="datetime-local" id="voucherStart" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="voucherEnd">Thời gian kết thúc</label>
                    <input type="datetime-local" id="voucherEnd" class="form-control" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label for="voucherdescription">Mô tả</label>
                    <input type="text" id="voucherdescription" class="form-control" />
                </div>
            </div>
        </div>

        <div class="form-actions-voucher">
            <button type="button" class="btn btn-cancel">Hủy</button>
            <button type="button" class="btn btn-save">Lưu</button>
        </div>
    </div>
</div>

<script>
    let voucherId = null;

    document.addEventListener("DOMContentLoaded", async () => {
        const urlParts = window.location.pathname.split("/");
        voucherId = urlParts[urlParts.length - 1];

        await loadVoucher(voucherId);
        document.querySelector(".btn-save").addEventListener("click", handleUpdateVoucher);
    });

    async function loadVoucher(id) {
        try {
            const res = await fetch(`/api/couponcodes/${id}`, {
                headers: {
                    Authorization: `Bearer ${localStorage.getItem("token")}`,
                }
            });
            const data = await res.json();

            if (data.user_ids === null) {
                document.getElementById("applyToAll").value = "all";
            } else if (data.user_ids === "new_users") {
                document.getElementById("applyToAll").value = "new_users_30d";
            } else {
                document.getElementById("applyToAll").value = "all"; // fallback
            }


            if (data && !data.error) {
                document.getElementById("vouchertitle").value = data.title || "";
                document.getElementById("vouchercode").value = data.code || "";
                document.getElementById("voucherprice").value = formatPriceInput(data.value_price || "");
                document.getElementById("voucherdescription").value = data.description || "";
                document.getElementById("vouchertype").value = data.discount_type;
                document.getElementById("voucherflash").value = data.is_flash_sale ? 1 : 0;
                document.getElementById("voucherStatus").value = data.status;
                document.getElementById("voucherStart").value = data.start_time?.slice(0, 16);
                document.getElementById("voucherEnd").value = data.exp_time?.slice(0, 16);
                document.getElementById("voucherUsed").value = data.used || 0;
                document.getElementById("minOrder").value = formatPriceInput(data.min_order || "");
            } else {
                showToast("Không tìm thấy voucher", "danger");
            }
        } catch (err) {
            console.error("Lỗi khi tải voucher:", err);
            showToast("Lỗi máy chủ", "danger");
        }
    }

    async function handleUpdateVoucher() {
        const title = document.getElementById("vouchertitle").value.trim();
        const description = document.getElementById("voucherdescription").value.trim();
        const code = document.getElementById("vouchercode").value.trim();
        const discount = parseFloat(document.getElementById("voucherprice").value);
        const discount_type = document.getElementById("vouchertype").value;
        const is_flash_sale = parseInt(document.getElementById("voucherflash").value);
        const status = parseInt(document.getElementById("voucherStatus").value);
        const start_time = document.getElementById("voucherStart").value;
        const exp_time = document.getElementById("voucherEnd").value;
        const used = parseInt(document.getElementById("voucherUsed").value);
        const applyTo = document.getElementById("applyToAll").value;
        const min_order = parseFloat(document.getElementById("minOrder").value) || 0;

        let user_ids = null;
        if (applyTo === "new_users_30d") {
            user_ids = "new_users";
        } else if (applyTo === "all") {
            user_ids = "all";
        }


        const saveBtn = document.querySelector(".btn-save");
        saveBtn.disabled = true;
        saveBtn.innerText = "Đang lưu...";

        if (!title || !code || isNaN(discount) || !exp_time) {
            showToast("Vui lòng điền đầy đủ thông tin", "danger");
            saveBtn.disabled = false;
            saveBtn.innerText = "Lưu";
            return;
        }

        const payload = {
            code,
            title,
            description,
            value_price: discount,
            discount_type,
            start_time,
            exp_time,
            is_flash_sale,
            status,
            used,
            user_ids,
            min_order,
        };

        try {
            const res = await fetch(`/api/couponcodes/${voucherId}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json",
                    Authorization: `Bearer ${localStorage.getItem("token")}`,
                },
                body: JSON.stringify(payload),
            });

            const data = await res.json();
            if (data.error) {
                showToast(data.error, "danger");
            } else {
                showToast("Cập nhật voucher thành công", "success");
                setTimeout(() => window.location.href = "/dashboard/voucher", 1200);
            }
        } catch (err) {
            console.error("Lỗi cập nhật voucher:", err);
            showToast("Lỗi máy chủ", "danger");
        } finally {
            saveBtn.disabled = false;
            saveBtn.innerText = "Lưu";
        }
    }

    function formatPriceInput(value) {
        if (!value) return "";
        const number = parseFloat(value);
        if (isNaN(number)) return "";
        return number % 1 === 0 ? number.toString() : number.toFixed(2).replace(/\.?0+$/, "");
    }

    function showToast(message, type = "success") {
        let toastContainer = document.getElementById("toastContainer");
        if (!toastContainer) {
            toastContainer = document.createElement("div");
            toastContainer.id = "toastContainer";
            toastContainer.className = "position-fixed top-0 end-0 p-3";
            toastContainer.style.zIndex = "1050";
            document.body.appendChild(toastContainer);
        }

        const toast = document.createElement("div");
        toast.className = `toast align-items-center text-white bg-${type} border-0`;
        toast.innerHTML = `
            <div class="d-flex">
                <div class="toast-body">${message}</div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
            </div>`;
        toastContainer.appendChild(toast);

        new bootstrap.Toast(toast, { delay: 4000 }).show();
        toast.addEventListener("hidden.bs.toast", () => toast.remove());
    }
</script>